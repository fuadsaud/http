#!/usr/bin/env ruby
# encoding: UTF-8

$:.unshift File.expand_path(File.join(File.dirname(__FILE__), '../lib'))

require 'http'
require 'clik'

OPTIONS = {
  dir: File.dirname(__FILE__), # Defaults to serving the current dir.
}

def show_help
  puts <<-HELP
Usage: bundle exec http server [-p --port PORT] [-d --dir DIR]
       bundle exec http client [-p --port PORT]

The client is a REPL which takes the path of the required file - without the
leading forward-slash - and prints aout the result.
HELP
end

cli_options = {
  '-p --port' => lambda {|p| OPTIONS[:port] = p },
  '-h --help' => lambda { show_help; exit }
}

case ARGV.first
when 'server'
  cli cli_options.merge '-d --dir' => lambda {|d| OPTIONS[:dir]  = d }

  if OPTIONS[:port]
    HTTP::Server.start(OPTIONS[:dir], OPTIONS[:port])
  else
    HTTP::Server.start(OPTIONS[:dir])
  end
when 'client'
  cli cli_options

  loop do
    print '>> '
    url = "http://0.0.0.0#{":#{OPTIONS[:port] ? OPTIONS[:port] : ''}"}/#{STDIN.gets.chomp}"

    puts HTTP::Client.get(url).to_json
  end
else
  show_help
end
